synchronized 锁：单机版 OK，上 nginx分布式微服务，单机锁就不 OK,
分布式锁：取消单机锁，上 redis 分布式锁 SETNX
如果出异常的话，可能无法释放锁， 必须要在 finally 代码块中释放锁
如果宕机了，部署了微服务代码层面根本没有走到 finally 这块，也没办法保证解锁，因此需要有设置锁的过期时间
除了增加过期时间之外，还必须要 SETNX 操作和设置过期时间的操作必须为原子性操作
规定只能自己删除自己的锁，你不能把别人的锁删除了，防止张冠李戴，可使用 lua 脚本或者事务
判断锁所属业务与删除锁的操作也需要是原子性操作
redis 集群环境下，我们自己写的也不 OK，直接上 RedLock 之 Redisson 落地实现
————————————————
版权声明：本文为CSDN博主「OnebyWang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/oneby1314/article/details/113789412