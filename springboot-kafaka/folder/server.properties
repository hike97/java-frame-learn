# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see kafka.server.KafkaConfig for additional details and defaults
############################# Server Basics #############################
# broker\u7684 ID\u3002\u5BF9\u4E8E\u6BCF\u4E2A\u4EE3\u7406\uFF0C\u8FD9\u5FC5\u987B\u8BBE\u7F6E\u4E3A\u552F\u4E00\u7684\u6574\u6570\u3002
bsroker.id=0
############################# Socket Server Settings #############################
# \u5957\u63A5\u5B57\u670D\u52A1\u5668\u4FA6\u542C\u7684\u5730\u5740\u3002\u5982\u679C\u672A\u914D\u7F6E\uFF0C\u5B83\u5C06\u83B7\u53D6\u4ECE
# java.net.InetAddress.getCanonicalHostName() \u8FD4\u56DE\u7684\u503C\u3002
#   FORMAT:
#     listeners = listener_name://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
listeners=PLAINTEXT://0.0.0.0:9092
# Hostname and port the broker will advertise to producers and consumers. If not set,
# it uses the value for "listeners" if configured.  Otherwise, it will use the value
# returned from java.net.InetAddress.getCanonicalHostName().
advertised.listeners=PLAINTEXT://192.168.3.10:9092
# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
# The number of threads that the server uses for receiving requests from the network and sending responses to the network
num.network.threads=3
# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=8
# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400
# The receive buffer (SO_RCVBUF) used by the socket server
# \u8868\u793A\u4E00\u4E2A\u670D\u52A1\u5668\u80FD\u591F\u63A5\u53D7\u5904\u7406\u7684\u6D88\u606F\u6700\u5927\u5B57\u8282\u6570 linked-in 10k \u6700\u4F73
socket.receive.buffer.bytes=102400
# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600
############################# Log Basics #############################
# A comma separated list of directories under which to store log files
# \u4EE5\u9017\u53F7\u5206\u9694\u7684\u76EE\u5F55\u5217\u8868\uFF0C\u7528\u4E8E\u5B58\u50A8\u65E5\u5FD7\u6587\u4EF6 \u53EF\u4EE5\u914D\u7F6E\u591A\u4E2A \u6700\u5C11\u4F7F\u7528\u539F\u5219
log.dirs=/tmp/kafka-logs
#\u6BCF\u4E2A\u4E3B\u9898\u7684\u9ED8\u8BA4\u65E5\u5FD7\u5206\u533A\u6570\u3002\u66F4\u591A\u7684\u5206\u533A\u5141\u8BB8\u4F7F\u7528\u66F4\u5927\u7684\u5E76\u884C\u6027\uFF0C\u4F46\u8FD9\u4E5F\u4F1A\u5BFC\u81F4\u8DE8\u4EE3\u7406\u7684\u66F4\u591A\u6587\u4EF6\u3002
#\u5206\u533A\u8BC4\u4F30\u76F8\u5173 kafka \u6BCF\u79D2\u9700\u8981\u5199\u5165\u548C\u8BFB\u53D61G\u7684\u6570\u636E\uFF0C\u6BCF\u4E2A\u6D88\u8D39\u8005\u6BCF\u79D250M 20\u4E2A\u5206\u533A 20\u6D88\u8D39\u8005
num.partitions=1
# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
num.recovery.threads.per.data.dir=1
############################# Internal Topic Settings  #############################
# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
############################# Log Flush Policy #############################
# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.
# The number of messages to accept before forcing a flush of data to disk
#log.flush.interval.messages=10000
# The maximum amount of time a message can sit in a log before we force a flush
#log.flush.interval.ms=1000
#############################\u65E5\u5FD7\u5220\u9664\u7B56\u7565 #############################
# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.
# \u5220\u9664\u7684\u65E5\u5FD7\u6587\u4EF6\u7684\u6700\u5C0F\u65F6\u95F4 \u6839\u636E\u6700\u540E\u4FEE\u6539\u65F6\u95F4+168\u5C0F\u65F6
log.retention.hours=168
# A size-based retention policy for logs. Segments are pruned from the log unless the remaining
# segments drop below log.retention.bytes. Functions independently of log.retention.hours.
# \u6BCF\u4E2A\u5206\u533A\u6587\u4EF6\u7684\u6700\u5927\u6587\u4EF6\u5927\u5C0F \u7B56\u7565\u662F\u8D85\u51FA\u8FD9\u4E2A\u9650\u5236\u7684\u90E8\u5206\u6570\u636E\u56DE\u88AB\u5220\u9664 \u4E00\u822C\u4E0D\u8BBE\u7F6E \u9ED8\u8BA4-1 \u6CA1\u6709
#log.retention.bytes=1073741824
# The maximum size of a log segment file. When this size is reached a new log segment will be created.
# \u65E5\u5FD7\u7247\u6BB5\u7684\u6700\u5927\u5927\u5C0F \u9ED8\u8BA41G \u5982\u679C\u6EE1\u4E86 \u4E0D\u4F1A\u5199\u5165\u6570\u636E \u7B49\u5230 7 \u5929\u540E\u4F1A\u88AB\u5E72\u6389
log.segment.bytes=1073741824
# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
# \u68C0\u67E5\u95F4\u9694
log.retention.check.interval.ms=300000
############################# Zookeeper #############################
# Zookeeper connection string (see zookeeper docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
zookeeper.connect=localhost:2181
# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms=6000
############################# Group Coordinator Settings #############################
# The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.
# The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.
# The default value for this is 3 seconds.
# We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.
# However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.
group.initial.rebalance.delay.ms=0
